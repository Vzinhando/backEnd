// <auto-generated />
using System;
using BackEndDemoday.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace BackEndDemoday.Migrations
{
    [DbContext(typeof(SeuDbContext))]
    partial class SeuDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("BackEndDemoday.Entities.AssinaturaPlano", b =>
                {
                    b.Property<int>("IdAssinaturaPlano")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("idAssinaturaPlano");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("IdAssinaturaPlano"));

                    b.Property<DateOnly>("DataAssinatura")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("date")
                        .HasColumnName("dataAssinatura")
                        .HasDefaultValueSql("NOW()");

                    b.Property<DateOnly?>("DataExpiracao")
                        .HasColumnType("date")
                        .HasColumnName("dataExpiracao");

                    b.Property<int>("IdPlano")
                        .HasColumnType("integer")
                        .HasColumnName("idPlano");

                    b.Property<int>("IdUsuario")
                        .HasColumnType("integer")
                        .HasColumnName("idUsuario");

                    b.Property<string>("StatusAssinatura")
                        .IsRequired()
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("character varying(30)")
                        .HasColumnName("statusAssinatura");

                    b.HasKey("IdAssinaturaPlano")
                        .HasName("PK__Assinatu__0D8DAB1EC7C70527");

                    b.HasIndex("IdPlano");

                    b.HasIndex("IdUsuario");

                    b.ToTable("AssinaturaPlano");
                });

            modelBuilder.Entity("BackEndDemoday.Entities.Avaliacao", b =>
                {
                    b.Property<int>("IdAvaliacao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("idAvaliacao");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("IdAvaliacao"));

                    b.Property<DateOnly?>("DataAvaliacao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("date")
                        .HasColumnName("dataAvaliacao")
                        .HasDefaultValueSql("NOW()");

                    b.Property<string>("DescricaoAvaliacao")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("character varying(500)")
                        .HasColumnName("descricaoAvaliacao");

                    b.Property<decimal>("EstrelasAvaliacao")
                        .HasColumnType("decimal(3, 1)")
                        .HasColumnName("estrelasAvaliacao");

                    b.HasKey("IdAvaliacao")
                        .HasName("PK__Avaliaca__2A0C83123A7CE11B");

                    b.ToTable("Avaliacao");
                });

            modelBuilder.Entity("BackEndDemoday.Entities.ContratacaoServico", b =>
                {
                    b.Property<int>("IdContratacaoServico")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("idContratacaoServico");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("IdContratacaoServico"));

                    b.Property<DateOnly>("DataContratacao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("date")
                        .HasColumnName("dataContratacao")
                        .HasDefaultValueSql("NOW()");

                    b.Property<int>("IdPerfilContratado")
                        .HasColumnType("integer")
                        .HasColumnName("idPerfilContratado");

                    b.Property<int>("IdUsuarioContratante")
                        .HasColumnType("integer")
                        .HasColumnName("idUsuarioContratante");

                    b.Property<string>("StatusContratacao")
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("character varying(30)")
                        .HasColumnName("statusContratacao");

                    b.Property<decimal?>("ValorCombinado")
                        .HasColumnType("decimal(10, 2)")
                        .HasColumnName("valorCombinado");

                    b.HasKey("IdContratacaoServico")
                        .HasName("PK__Contrata__8D88D7932FE978B5");

                    b.HasIndex("IdPerfilContratado");

                    b.HasIndex("IdUsuarioContratante");

                    b.ToTable("ContratacaoServico");
                });

            modelBuilder.Entity("BackEndDemoday.Entities.CupomDesconto", b =>
                {
                    b.Property<int>("IdCupom")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("idCupom");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("IdCupom"));

                    b.Property<string>("CodigoCupom")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("codigoCupom");

                    b.Property<DateOnly?>("DataValidadeCupom")
                        .HasColumnType("date")
                        .HasColumnName("dataValidadeCupom");

                    b.Property<decimal?>("PorcentagemDescontoCupom")
                        .HasColumnType("decimal(5, 2)")
                        .HasColumnName("porcentagemDescontoCupom");

                    b.Property<string>("StatusCupom")
                        .IsRequired()
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("character varying(30)")
                        .HasColumnName("statusCupom");

                    b.Property<string>("TipoCupom")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("tipoCupom");

                    b.HasKey("IdCupom")
                        .HasName("PK__CupomDes__9AD8BF9D617FB24F");

                    b.HasIndex(new[] { "CodigoCupom" }, "UQ_Cupom_Codigo")
                        .IsUnique();

                    b.ToTable("CupomDesconto");
                });

            modelBuilder.Entity("BackEndDemoday.Entities.Pagamento", b =>
                {
                    b.Property<int>("IdPagamento")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("idPagamento");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("IdPagamento"));

                    b.Property<DateTime?>("DataPagamento")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("dataPagamento")
                        .HasDefaultValueSql("NOW()");

                    b.Property<string>("FormaPagamento")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("formaPagamento");

                    b.Property<int?>("IdAssinaturaPlano")
                        .HasColumnType("integer")
                        .HasColumnName("idAssinaturaPlano");

                    b.Property<int?>("IdContratacaoServico")
                        .HasColumnType("integer")
                        .HasColumnName("idContratacaoServico");

                    b.Property<int?>("IdCupom")
                        .HasColumnType("integer")
                        .HasColumnName("idCupom");

                    b.Property<string>("IdTransacao")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("idTransacao");

                    b.Property<string>("StatusPagamento")
                        .IsRequired()
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("character varying(30)")
                        .HasColumnName("statusPagamento");

                    b.Property<decimal>("ValorBruto")
                        .HasColumnType("decimal(10, 2)")
                        .HasColumnName("valorBruto");

                    b.Property<decimal?>("ValorDesconto")
                        .HasColumnType("decimal(10, 2)")
                        .HasColumnName("valorDesconto");

                    b.Property<decimal>("ValorFinal")
                        .HasColumnType("decimal(10, 2)")
                        .HasColumnName("valorFinal");

                    b.HasKey("IdPagamento")
                        .HasName("PK__Pagament__866960F6C4BF8598");

                    b.HasIndex("IdAssinaturaPlano");

                    b.HasIndex("IdContratacaoServico");

                    b.HasIndex("IdCupom");

                    b.ToTable("Pagamento");
                });

            modelBuilder.Entity("BackEndDemoday.Entities.PerfilUsuario", b =>
                {
                    b.Property<int>("IdPerfil")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("idPerfil");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("IdPerfil"));

                    b.Property<string>("CategoriaPerfil")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("categoriaPerfil");

                    b.Property<string>("DescricaoPerfil")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("character varying(500)")
                        .HasColumnName("descricaoPerfil");

                    b.Property<string>("FotoPerfilUrl")
                        .IsUnicode(false)
                        .HasColumnType("text")
                        .HasColumnName("fotoPerfilUrl");

                    b.Property<int>("IdUsuario")
                        .HasColumnType("integer")
                        .HasColumnName("idUsuario");

                    b.Property<string>("NomePerfil")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("nomePerfil");

                    b.Property<string>("RedeSocialPerfil")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("redeSocialPerfil");

                    b.Property<string>("TipoLocalUsuario")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("tipoLocalUsuario");

                    b.HasKey("IdPerfil")
                        .HasName("PK__Perfil_U__40F13B607DADE508");

                    b.HasIndex("IdUsuario");

                    b.ToTable("Perfil_Usuario");
                });

            modelBuilder.Entity("BackEndDemoday.Entities.Plano", b =>
                {
                    b.Property<int>("IdPlano")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("idPlano");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("IdPlano"));

                    b.Property<string>("StatusPlano")
                        .IsRequired()
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("character varying(30)")
                        .HasColumnName("statusPlano");

                    b.Property<string>("TipoPlano")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("tipoPlano");

                    b.Property<decimal>("ValorPlano")
                        .HasColumnType("decimal(10, 2)")
                        .HasColumnName("valorPlano");

                    b.HasKey("IdPlano")
                        .HasName("PK__Plano__39B8602232BA9038");

                    b.ToTable("Plano");
                });

            modelBuilder.Entity("BackEndDemoday.Entities.ServicoOferecido", b =>
                {
                    b.Property<int>("IdServicoOferecido")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("idServicoOferecido");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("IdServicoOferecido"));

                    b.Property<string>("DescricaoServico")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("character varying(500)")
                        .HasColumnName("descricaoServico");

                    b.Property<int>("IdPerfil")
                        .HasColumnType("integer")
                        .HasColumnName("idPerfil");

                    b.Property<string>("NomeServico")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("nomeServico");

                    b.Property<decimal?>("PrecoBase")
                        .HasColumnType("decimal(10, 2)")
                        .HasColumnName("precoBase");

                    b.HasKey("IdServicoOferecido")
                        .HasName("PK__ServicoO__B42AD94B8C0AEC98");

                    b.HasIndex("IdPerfil");

                    b.ToTable("ServicoOferecido");
                });

            modelBuilder.Entity("BackEndDemoday.Entities.Usuario", b =>
                {
                    b.Property<int>("IdUsuario")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("idUsuario");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("IdUsuario"));

                    b.Property<string>("CepUsuario")
                        .HasMaxLength(9)
                        .IsUnicode(false)
                        .HasColumnType("character(9)")
                        .HasColumnName("cepUsuario")
                        .IsFixedLength();

                    b.Property<string>("CidadeUsuario")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("cidadeUsuario");

                    b.Property<DateOnly?>("DataCadastroUsuario")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("date")
                        .HasColumnName("dataCadastroUsuario")
                        .HasDefaultValueSql("NOW()");

                    b.Property<DateOnly?>("DataNascimentoUsuario")
                        .HasColumnType("date")
                        .HasColumnName("dataNascimentoUsuario");

                    b.Property<string>("EmailUsuario")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("emailUsuario");

                    b.Property<string>("EnderecoUsuario")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("enderecoUsuario");

                    b.Property<string>("NomeUsuario")
                        .IsRequired()
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("character varying(150)")
                        .HasColumnName("nomeUsuario");

                    b.Property<string>("SenhaUsuario")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("senhaUsuario");

                    b.Property<string>("SexoUsuario")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("character(1)")
                        .HasColumnName("sexoUsuario")
                        .IsFixedLength();

                    b.Property<string>("TelefoneUsuario")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("character varying(20)")
                        .HasColumnName("telefoneUsuario");

                    b.Property<string>("TipoUsuario")
                        .IsRequired()
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("character varying(30)")
                        .HasColumnName("tipoUsuario");

                    b.HasKey("IdUsuario")
                        .HasName("PK__Usuario__645723A6A1C27A4F");

                    b.HasIndex(new[] { "EmailUsuario" }, "UQ_Usuario_Email")
                        .IsUnique();

                    b.ToTable("Usuario");
                });

            modelBuilder.Entity("BackEndDemoday.Entities.UsuarioAvaliaPerfil", b =>
                {
                    b.Property<int>("IdUsuarioAvaliador")
                        .HasColumnType("integer")
                        .HasColumnName("idUsuarioAvaliador");

                    b.Property<int>("IdPerfilAvaliado")
                        .HasColumnType("integer")
                        .HasColumnName("idPerfilAvaliado");

                    b.Property<int>("IdAvaliacao")
                        .HasColumnType("integer")
                        .HasColumnName("idAvaliacao");

                    b.HasKey("IdUsuarioAvaliador", "IdPerfilAvaliado")
                        .HasName("PK__Usuario___7112A8AE848BC099");

                    b.HasIndex("IdAvaliacao");

                    b.HasIndex("IdPerfilAvaliado");

                    b.ToTable("Usuario_Avalia_Perfil");
                });

            modelBuilder.Entity("BackEndDemoday.Entities.AssinaturaPlano", b =>
                {
                    b.HasOne("BackEndDemoday.Entities.Plano", "IdPlanoNavigation")
                        .WithMany("AssinaturaPlanos")
                        .HasForeignKey("IdPlano")
                        .IsRequired()
                        .HasConstraintName("FK_Assinatura_Plano");

                    b.HasOne("BackEndDemoday.Entities.Usuario", "IdUsuarioNavigation")
                        .WithMany("AssinaturaPlanos")
                        .HasForeignKey("IdUsuario")
                        .IsRequired()
                        .HasConstraintName("FK_Assinatura_Usuario");

                    b.Navigation("IdPlanoNavigation");

                    b.Navigation("IdUsuarioNavigation");
                });

            modelBuilder.Entity("BackEndDemoday.Entities.ContratacaoServico", b =>
                {
                    b.HasOne("BackEndDemoday.Entities.PerfilUsuario", "IdPerfilContratadoNavigation")
                        .WithMany("ContratacaoServicos")
                        .HasForeignKey("IdPerfilContratado")
                        .IsRequired()
                        .HasConstraintName("FK_Contratacao_PerfilContratado");

                    b.HasOne("BackEndDemoday.Entities.Usuario", "IdUsuarioContratanteNavigation")
                        .WithMany("ContratacaoServicos")
                        .HasForeignKey("IdUsuarioContratante")
                        .IsRequired()
                        .HasConstraintName("FK_Contratacao_UsuarioContratante");

                    b.Navigation("IdPerfilContratadoNavigation");

                    b.Navigation("IdUsuarioContratanteNavigation");
                });

            modelBuilder.Entity("BackEndDemoday.Entities.Pagamento", b =>
                {
                    b.HasOne("BackEndDemoday.Entities.AssinaturaPlano", "IdAssinaturaPlanoNavigation")
                        .WithMany("Pagamentos")
                        .HasForeignKey("IdAssinaturaPlano")
                        .HasConstraintName("FK_Pagamento_AssinaturaPlano");

                    b.HasOne("BackEndDemoday.Entities.ContratacaoServico", "IdContratacaoServicoNavigation")
                        .WithMany("Pagamentos")
                        .HasForeignKey("IdContratacaoServico")
                        .HasConstraintName("FK_Pagamento_ContratacaoServico");

                    b.HasOne("BackEndDemoday.Entities.CupomDesconto", "IdCupomNavigation")
                        .WithMany("Pagamentos")
                        .HasForeignKey("IdCupom")
                        .HasConstraintName("FK_Pagamento_CupomDesconto");

                    b.Navigation("IdAssinaturaPlanoNavigation");

                    b.Navigation("IdContratacaoServicoNavigation");

                    b.Navigation("IdCupomNavigation");
                });

            modelBuilder.Entity("BackEndDemoday.Entities.PerfilUsuario", b =>
                {
                    b.HasOne("BackEndDemoday.Entities.Usuario", "IdUsuarioNavigation")
                        .WithMany("PerfilUsuarios")
                        .HasForeignKey("IdUsuario")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_Perfil_Usuario_Usuario");

                    b.Navigation("IdUsuarioNavigation");
                });

            modelBuilder.Entity("BackEndDemoday.Entities.ServicoOferecido", b =>
                {
                    b.HasOne("BackEndDemoday.Entities.PerfilUsuario", "IdPerfilNavigation")
                        .WithMany("ServicoOferecidos")
                        .HasForeignKey("IdPerfil")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_Servico_Perfil");

                    b.Navigation("IdPerfilNavigation");
                });

            modelBuilder.Entity("BackEndDemoday.Entities.UsuarioAvaliaPerfil", b =>
                {
                    b.HasOne("BackEndDemoday.Entities.Avaliacao", "IdAvaliacaoNavigation")
                        .WithMany("UsuarioAvaliaPerfils")
                        .HasForeignKey("IdAvaliacao")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_Avaliacao_Avaliacao");

                    b.HasOne("BackEndDemoday.Entities.PerfilUsuario", "IdPerfilAvaliadoNavigation")
                        .WithMany("UsuarioAvaliaPerfils")
                        .HasForeignKey("IdPerfilAvaliado")
                        .IsRequired()
                        .HasConstraintName("FK_Avaliacao_Perfil");

                    b.HasOne("BackEndDemoday.Entities.Usuario", "IdUsuarioAvaliadorNavigation")
                        .WithMany("UsuarioAvaliaPerfils")
                        .HasForeignKey("IdUsuarioAvaliador")
                        .IsRequired()
                        .HasConstraintName("FK_Avaliacao_Usuario");

                    b.Navigation("IdAvaliacaoNavigation");

                    b.Navigation("IdPerfilAvaliadoNavigation");

                    b.Navigation("IdUsuarioAvaliadorNavigation");
                });

            modelBuilder.Entity("BackEndDemoday.Entities.AssinaturaPlano", b =>
                {
                    b.Navigation("Pagamentos");
                });

            modelBuilder.Entity("BackEndDemoday.Entities.Avaliacao", b =>
                {
                    b.Navigation("UsuarioAvaliaPerfils");
                });

            modelBuilder.Entity("BackEndDemoday.Entities.ContratacaoServico", b =>
                {
                    b.Navigation("Pagamentos");
                });

            modelBuilder.Entity("BackEndDemoday.Entities.CupomDesconto", b =>
                {
                    b.Navigation("Pagamentos");
                });

            modelBuilder.Entity("BackEndDemoday.Entities.PerfilUsuario", b =>
                {
                    b.Navigation("ContratacaoServicos");

                    b.Navigation("ServicoOferecidos");

                    b.Navigation("UsuarioAvaliaPerfils");
                });

            modelBuilder.Entity("BackEndDemoday.Entities.Plano", b =>
                {
                    b.Navigation("AssinaturaPlanos");
                });

            modelBuilder.Entity("BackEndDemoday.Entities.Usuario", b =>
                {
                    b.Navigation("AssinaturaPlanos");

                    b.Navigation("ContratacaoServicos");

                    b.Navigation("PerfilUsuarios");

                    b.Navigation("UsuarioAvaliaPerfils");
                });
#pragma warning restore 612, 618
        }
    }
}
